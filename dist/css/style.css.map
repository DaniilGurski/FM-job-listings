{"version":3,"sourceRoot":"","sources":["abstracts/_typography.scss","base/_reset.scss","base/_typography.scss","base/_root.scss","abstracts/_mixins.scss","base/_general.scss","abstracts/_colors.scss","components/_buttons.scss","components/_list.scss","components/_filter-bar.scss","components/_job-offer.scss","layout/_header.scss","layout/_footer.scss","layout/_main.scss","layout/_job-listings.scss","utils/_container.scss","utils/_appearence.scss","utils/_color-utils.scss","utils/_layout-utils.scss"],"names":[],"mappings":"AAGA;AACQ;ACFR;AAAA;AAAA;AAGA;AAAA;AAAA;EAGE;;;AAGF;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOE;;;AAIF;AAAA;AAAA;AAGA;AAAA;EAEE;;;AAIF;AAAA;AAAA;AAGA;EACI;;AAEA;EACI;;;AAKR;AAAA;AAAA;AAGA;EACE;EACA;EACA;;;AAIF;AAAA;AAAA;AAGA;EACE;EACA;;;AAIF;AAAA;AAAA;AAGA;AAAA;EAEE;EACA;;;AAIF;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;EAIE;;;AClFF;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;EAMI;;;ACJJ;EC0BY;EAAA;EAAA;EAAA;EAAA;EAAA;EA6BY;EAAA;EAAA;EDnDpB;AAEA;;ACOA;EDbJ;IAQQ;;;;AETR;AACA;EACI,aLES;EKDT,kBCcc;EDbd,WLkBQ;;;AOtBZ;AACA;EACI;EAEA;EACA;EACA;EAEA,aPFM;EOIN,kBDOc;ECNd,ODGc;ECDd;EACA;EACA;EAEA;;AAGA;EACI;;AAEA;EACI,kBDVM;ECWN,ODNM;;ACWd;EACI;EACA,YDlBU;ECoBV;EAEA;;AAGA;EACI,kBDzBM;;;AC+BlB;EACI;EACA;;AACA;EACI,ODlCU;ECmCV;EACA;EACA;;AAEA;EACI;EACA,OD3CM;;;AEdlB;ACAA;ELyGI,SADmB;EAEnB;EACA,YExFc;EFyFd;EK1GA;EACA;EAEA;;AAEA;ELmFA;EACA;EAxBA;EAKI,KAiB8B;EAS9B;EKzFA;EACA;;AAGJ;EACI;;;ACdR;ENyGI,SADmB;EAEnB;EACA,YExFc;EFyFd;EM1GA;EAEA;AAGA;AA6FA;;AA5FA;EACI;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA,kBJJU;EIMV;;AAIJ;EN2CA;EAKI,KANU;EMxCV;;AAIJ;EACI;;AAIJ;EACI;EACA;EACA;EACA;;AAIJ;ENmCA;EAKI,KMvCc;;AAIlB;ENmBA;EAKI,KANU;EMhBV;EACA,OJrCU;EIsCV,aV9CE;;AUkDN;EACI;EACA,WVpCI;EUqCJ,OJxCU;EIyCV,kBJ7CU;EI+CV;EACA;;AAEA;EACI,kBJpDM;;AIyDd;EACI,aVlEE;EUmEF,WVrDI;;AUyDR;ENaA;EACA;EAxBA;EAKI,KMMuC;EACvC;EACA,OJhEU;AIkEV;;AACA;EACI;;AAKR;ENtBA;EAKI,KANU;EAwBd;EACA;EAOI;EMNA;;AAEA;EACI;;ANjFR;EMdJ;IAsGQ;;EAEA;IAEI;IACA;IACA;IAEA;;EAKJ;IACI;IACA;IACA;;EAIJ;IACI;IACA;IAEA;;;;AC9HZ;AACA;EACI;EACA;AAEA;;APCA;EOLJ;IAMQ;;;;ACPR;ACCA;AAEI;ET2EA;EAGI,SDnEQ;;;AWbhB;EVyFI;EACA;EAOI;EApBJ;EAGI,SDnEQ;;;AYdhB;AACA;EACI;EACA;;;ACLJ;EACI;;;AAIJ;EACI;;;AAIJ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;;;ACfJ;ACAA;AAEA;EACI;EACA;;;AAGJ;EACI;EACA","file":"style.css","sourcesContent":["@use \"sizes\" as *;\r\n@use \"functions\" as *;\r\n\r\n/* google fonts */\r\n@import url('https://fonts.googleapis.com/css2?family=League+Spartan:wght@500..700&display=swap');\r\n\r\n$ff-primary: \"League Spartan\", sans-serif;\r\n$fw-medium: 500;\r\n$fw-bold: 700;\r\n\r\n$type: (\r\n    typescale: (\r\n        mobile: (\r\n            300: rem($size-3),\r\n            200: rem($size-2),\r\n            100: rem(15)\r\n        ),\r\n        desktop: (\r\n        )\r\n    )\r\n);\r\n\r\n$fs-larger: var(--fs-300);\r\n$fs-normal: var(--fs-200);\r\n$fs-small:  var(--fs-100);\r\n\r\n","// Based on https://piccalil.li/blog/a-modern-css-reset\r\n\r\n/* \r\nBox sizing rules \r\n*/\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* \r\nRemove default margin \r\n*/\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nfigure {\r\n  margin: 0;\r\n}\r\n\r\n\r\n/* \r\nRemove list styles on ul, ol elements with a list role, which suggests default styling will be removed \r\n*/\r\nul[role='list'],\r\nol[role='list'] {\r\n  list-style: none;\r\n}\r\n\r\n\r\n/* \r\nSet core root defaults\r\n*/\r\nhtml {\r\n    height: 100%;\r\n\r\n    &:focus-visible {\r\n        scroll-behavior: smooth;\r\n    }\r\n}\r\n\r\n\r\n/* \r\nSet core body defaults\r\n*/\r\nbody {\r\n  height: 100%;\r\n  text-rendering: optimizeSpeed;\r\n  line-height: 1.5;\r\n}\r\n\r\n\r\n/* \r\nReset default link styles\r\n*/\r\na {\r\n  text-decoration: auto;\r\n  color: inherit;\r\n}\r\n\r\n\r\n/*\r\nMake images easier to work with \r\n*/\r\nimg,\r\npicture {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n\r\n/* \r\nInherit fonts for inputs and buttons \r\n*/\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n","/* reset default heading typography styles */\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    font: inherit;\r\n}\r\n","@use \"../abstracts/\" as *;\r\n\r\n\r\n:root {\r\n    @include convert_colors();\r\n    @include convert_typography();\r\n\r\n    --component-gap: 2rem;\r\n    \r\n    /* double component gap on mobile devices */ \r\n    @include mq-mobile($breakpoint) {\r\n        --component-gap: 4rem;\r\n    }\r\n}\r\n\r\n\r\n$component-gap: var(--component-gap); // TODO: move to sep file ?\r\n","@use \"colors\"    as *;\r\n@use \"typography\" as *;\r\n@use \"functions\" as *;\r\n@use \"sizes\" as *;\r\n\r\n\r\n// Add min-width media query\r\n@mixin mq-desktop($breakpoint: 720) {\r\n    @media (min-width: em($breakpoint)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n\r\n// Add max-width media query\r\n@mixin mq-mobile($breakpoint) {\r\n    @media (max-width: em($breakpoint)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n\r\n// Convert color map either into css custom properties\r\n@mixin convert_colors() {\r\n    $color-map: $colors;\r\n\r\n    @each $role, $shades in $color-map {\r\n\r\n        @each $lightness, $color in $shades {\r\n            --clr-#{$role}-#{$lightness}: #{$color};\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Convert map with typography related values either into css custom properties \r\n@mixin convert_typography() {\r\n    $typeography-map: $type;\r\n    \r\n    @each $key, $map in $typeography-map {\r\n        @if $key == \"font-weight\" {\r\n            @each $key, $value in $map {\r\n                --fw-#{$key}: #{$value};\r\n            }\r\n        }\r\n\r\n        @if $key == \"typescale\" {\r\n            @each $screen-size, $typescale in $map {\r\n                \r\n                @if $screen-size == \"desktop\" {\r\n                    @include mq-desktop($breakpoint: 0) {\r\n                        @each $scale, $value in $typescale {\r\n                            --fs-#{$scale}: #{$value};\r\n                        }\r\n                    }\r\n\r\n                } @else {\r\n                    @each $scale, $value in $typescale {\r\n                        --fs-#{$scale}: #{$value};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Quick access to gap proprety for different situations\r\n@mixin flex($gap: 1rem, $row-gap: \"false\") {\r\n    display: flex;\r\n\r\n    @if $row-gap == \"true\" {\r\n        row-gap: $gap;\r\n    } @else {\r\n        gap: $gap;\r\n    }\r\n}\r\n\r\n\r\n@mixin grid($gap: 1rem, $row-gap: \"false\") {\r\n    display: grid;\r\n\r\n    @if $row-gap == \"true\" {\r\n        row-gap: $gap;\r\n    } @else {\r\n        gap: $gap;\r\n    }\r\n}\r\n\r\n\r\n// Basic list \r\n@mixin list($row: \"false\", $item-gap: 1rem, $off-markers: \"false\") {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    @if $row == \"true\" {\r\n        @include flex($item-gap);\r\n    }\r\n\r\n    @if $off-markers == \"true\" {\r\n        list-style-type: none;\r\n    }\r\n}\r\n\r\n\r\n// Project related\r\n@mixin frame($padding: 1rem 2rem, $box-shadow-pos: 0px 2px 20px 0px) {\r\n    padding: $padding;\r\n    box-shadow: $box-shadow-pos lighten(hsl(180, 8%, 52%), 30);\r\n    background: $clr-neutral-000;\r\n    border-radius: rem(8);\r\n}\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* general */\r\nbody {\r\n    font-family: $ff-primary;\r\n    background-color: $clr-neutral-200;\r\n    font-size: $fs-small;\r\n}","@use \"sass:map\";\r\n\r\n$colors: (\r\n    primary: (\r\n        500: hsl(180, 29%, 50%)\r\n    ),\r\n    neutral: (\r\n        800: hsl(180, 14%, 20%),\r\n        500: hsl(180, 8%, 52%),\r\n        200: hsl(180, 31%, 95%),\r\n        100: hsl(180, 52%, 96%),\r\n        \"000\": hsl(0, 0%, 100%)\r\n    )\r\n);\r\n\r\n\r\n$clr-primary-500: var(--clr-primary-500);\r\n$clr-neutral-800: var(--clr-neutral-800); \r\n$clr-neutral-500: var(--clr-neutral-500); \r\n$clr-neutral-200: var(--clr-neutral-200); // filter tablets\r\n$clr-neutral-100: var(--clr-neutral-100); // background\r\n$clr-neutral-000: var(--clr-neutral-000); // job card background\r\n\r\n\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* buttons */\r\n.tag {\r\n    --_tag-padding: 0.5em;\r\n    \r\n    display: flex;\r\n    gap: var(--_tag-padding);\r\n    align-items: center;\r\n    \r\n    font-weight: $fw-bold;\r\n\r\n    background-color: $clr-neutral-200;\r\n    color: $clr-primary-500;\r\n\r\n    padding-left: var(--_tag-padding);\r\n    border-radius: 0.25rem;\r\n    overflow: hidden;\r\n\r\n    user-select: none;\r\n    \r\n\r\n    &:not(:has(button)) {\r\n        padding-inline: var(--_tag-padding);\r\n\r\n        &:hover {\r\n            background-color: $clr-primary-500;\r\n            color: $clr-neutral-000;\r\n        }\r\n    }\r\n\r\n\r\n    &__close-btn {\r\n        align-self: stretch;\r\n        background: $clr-primary-500;\r\n\r\n        border: none;\r\n\r\n        padding: var(--_tag-padding);\r\n\r\n\r\n        &:hover {\r\n            background-color: $clr-neutral-800;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n.button {\r\n    border: none;\r\n    cursor: pointer;\r\n    &--secondary {\r\n        color: $clr-neutral-500;\r\n        background: none;\r\n        border: none;\r\n        line-height: normal;\r\n\r\n        &:hover {\r\n            text-decoration: underline;\r\n            color: $clr-primary-500;\r\n        }\r\n    }\r\n}\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* lists */\r\n","@use \"../abstracts/\" as *;\r\n\r\n.filter-bar {\r\n    @include frame();\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    height: min(4rem, 40vh);\r\n    \r\n    &__filter-tags {\r\n        @include list($row: \"true\", $off-markers: \"true\");\r\n        flex-wrap: wrap;\r\n        overflow-y: scroll;\r\n    }\r\n\r\n    & * {\r\n        line-height: normal;\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n.job-offer {\r\n    @include frame();\r\n    position: relative;\r\n\r\n    --_pic-size: var(--pic-size, auto);\r\n\r\n\r\n    /* new offer indicator */\r\n    &:has([data-featured-offer])::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: rem(8);\r\n        height: 100%;\r\n\r\n        border-radius: 1rem 0 0 1rem;\r\n\r\n        background-color: $clr-primary-500;\r\n\r\n        display: block;\r\n    }\r\n\r\n\r\n    &__content {\r\n        @include flex();\r\n        align-items: center;\r\n    }\r\n\r\n\r\n    &__recruiter-photo {\r\n        width: var(--_pic-size);\r\n    }\r\n\r\n\r\n    &__main {\r\n        flex: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n\r\n    &__descriptions {\r\n        @include grid(rem(8));\r\n    }\r\n\r\n\r\n    &__recruiter {\r\n        @include flex();\r\n        align-items: center;\r\n        color: $clr-primary-500;\r\n        font-weight: $fw-bold;\r\n    }\r\n\r\n\r\n    &__info-tag {\r\n        line-height: normal;\r\n        font-size: $fs-small;\r\n        color: $clr-neutral-000;\r\n        background-color: $clr-neutral-800;\r\n\r\n        padding: rem(7);\r\n        border-radius: 1rem;\r\n\r\n        &--accent {\r\n            background-color: $clr-primary-500;\r\n        }\r\n    }\r\n\r\n\r\n    &__position {\r\n        font-weight: $fw-bold;\r\n        font-size: $fs-larger;\r\n    }\r\n\r\n\r\n    &__additional {\r\n        @include list($row: \"true\", $item-gap: rem(28));\r\n        list-style-type: disc;\r\n        color: $clr-neutral-500;\r\n\r\n        /* remove marker from first list item of job-offer__additional */\r\n        li:nth-child(1)::marker {\r\n            content: \"\";\r\n        }\r\n    }\r\n\r\n\r\n    &__filters {\r\n        @include flex();\r\n        @include list($off-markers: \"true\");\r\n        flex-wrap: wrap;\r\n\r\n        button {\r\n            border:none;\r\n        }\r\n    }\r\n\r\n\r\n    /* layout change for job offer component for mobile devices */\r\n    @include mq-mobile($breakpoint) {\r\n        --pic-size: 4.0625rem; // 65px\r\n\r\n        &__main {\r\n            \r\n            row-gap: rem($size-4);\r\n            align-items: start;\r\n            flex-direction: column;\r\n            \r\n            margin-top: calc(var(--pic-size) / 2.5)\r\n        }\r\n        \r\n        \r\n        \r\n        &__descriptions {\r\n            width: 100%;\r\n            border-bottom: 1px solid $clr-neutral-500;\r\n            padding-bottom: 1rem;\r\n        }\r\n\r\n\r\n        &__recruiter-photo {\r\n            position: absolute;\r\n            top: 0;\r\n\r\n            transform: translateY(-50%);\r\n        }\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* HEADER */\r\n.header {\r\n    min-height: 20vh;\r\n    background: $clr-primary-500 url(\"/dist/img/bg-header-mobile.svg\");\r\n\r\n    /* change header bg for desktop devices */\r\n    @include mq-desktop($breakpoint) {\r\n        background: $clr-primary-500 url(\"/dist/img/bg-header-desktop.svg\");\r\n    }   \r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* FOOTER */","@use \"../abstracts/\" as *;\r\n@use \"../base/\" as *; // access component-gap variable\r\n\r\n/* MAIN */\r\n.main {\r\n    &__container {\r\n        @include grid($gap: $component-gap, $row-gap: \"true\");\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n@use \"../base/\" as *; // access component-gap variable\r\n\r\n.job-listings {\r\n    @include list($off-markers: \"true\");\r\n    @include grid($gap: $component-gap, $row-gap: \"true\");\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* container */\r\n.container {\r\n    width: min(75rem, 90%);\r\n    margin-inline: auto;\r\n}",".none {\r\n    display: none;\r\n}\r\n\r\n\r\n.hidden {\r\n    visibility: hidden;\r\n}\r\n\r\n\r\n.visually-hidden {\r\n    clip: rect(0 0 0 0);\r\n    clip-path: inset(50%);\r\n    height: 1px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    width: 1px;\r\n  }","@use \"../abstracts/\" as *;\r\n\r\n/* color utilities */\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* layout utilities */\r\n\r\n.flex {\r\n    display: flex;\r\n    gap: var(--gap, 1rem);\r\n}\r\n\r\n.grid {\r\n    display: grid;\r\n    gap: var(--gap, 1rem);\r\n}"]}